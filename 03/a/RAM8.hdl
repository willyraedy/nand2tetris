// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way16(in=in, sel=address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    DMux8Way(in=load, sel=address, a=aload, b=bload, c=cload, d=dload, e=eload, f=fload, g=gload, h=hload);
    Register(in=a, load=aload, out=aresult);
    Register(in=b, load=bload, out=bresult);
    Register(in=c, load=cload, out=cresult);
    Register(in=d, load=dload, out=dresult);
    Register(in=e, load=eload, out=eresult);
    Register(in=f, load=fload, out=fresult);
    Register(in=g, load=gload, out=gresult);
    Register(in=h, load=hload, out=hresult);
    Mux8Way16(a=aresult, b=bresult, c=cresult, d=dresult, e=eresult, f=fresult, g=gresult, h=hresult, sel=address, out=out);
}
